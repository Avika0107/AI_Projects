# python-rule-based-chatbot.py
import os # Import the os module to check for file existence
import textwrap
def get_bot_response(user_input):
    """
    Determines the chatbot's response based on predefined rules.

    Args:
        user_input (str): The message entered by the user.

    Returns:
        str: The chatbot's response.
    """
    # Convert the user input to lowercase for case-insensitive matching
    lower_case_input = user_input.lower()

    # Rule 1: Greetings
    if "hello" in lower_case_input or "hi" in lower_case_input:
        return "Hi there! How can I help you today?"
    # Rule 2: How are you?
    elif "how are you" in lower_case_input:
        return "I'm a computer program, so I don't have feelings, but I'm working perfectly! Thanks for asking."
    # Rule 3: Asking for name
    elif "your name" in lower_case_input:
        return "I don't have a name. I'm just a simple chatbot!"
    # Rule 4: Asking about capabilities
    elif "what can you do" in lower_case_input or "help" in lower_case_input:
        return "I can respond to basic questions based on keywords. Also i answer some questions about AI"
    # Rule 5: Saying goodbye
    elif "bye" in lower_case_input or "goodbye" in lower_case_input:
        print( "Goodbye! Have a wonderful day!")
    # Rule 6: Thank you
    elif "thank you" in lower_case_input or "thanks" in lower_case_input:
        return "You're most welcome!"
    # Rule 7: Asking about age
    elif "how old are you" in lower_case_input or "your age" in lower_case_input:
        return "I don't have an age, I'm just a program!"
    # Rule 8: Favorite color
    elif "favorite color" in lower_case_input:
        return "I don't have a favorite color, but I think all colors are cool!"
    # Rule 9: Tell me about AI / What is AI
    elif 'tell me about ai' in lower_case_input or 'what is ai' in lower_case_input:
        # Define the path to your chatbot.txt file
        file_path = 'chatbot.txt'
        if os.path.exists(file_path):
            try:
                with open(file_path, 'r', errors='ignore') as f:
                    raw_doc = f.read()
                    wrapped_text = textwrap.fill(raw_doc, width=70)
                    return wrapped_text
                return raw_doc # Return the content of the file
            except Exception as e:
                return f"Sorry, I had trouble reading the AI information: {e}"
        else:
            return "I don't have information about AI right now. Please make sure 'chatbot.txt' exists in the same directory."
    # Default response if no rule matches
    else:
        return "Hmm, I'm not sure I understand. Could you try asking something else?"

def start_chatbot():
    """
    Starts the chatbot conversation loop.
    """
    print("Hello! I'm a simple chatbot. Type 'exit' to end our chat.") # Re-added initial greeting

    while True:
        user_message = input("You: ") # Get input from the user

        if user_message.lower() == 'exit':
            print("Chatbot: It was nice chatting with you! Goodbye!")
            break # Exit the loop if user types 'exit'
        else:
            bot_response = get_bot_response(user_message) # Get bot's response
            print(f"Chatbot: {bot_response}") # Print the bot's response

# Start the chatbot when the script is run
if __name__ == "__main__":
    start_chatbot()
