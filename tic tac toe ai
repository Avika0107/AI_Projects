import math

# Constants
HUMAN = 'O'
AI = 'X'
EMPTY = ' '

# Create initial board
def create_board():
    return [[EMPTY for _ in range(3)] for _ in range(3)]

# Print the board
def print_board(board):
    for row in board:
        print('|'.join(row))
        print('-' * 5)

# Check for a winner
def check_winner(board):
  lines=[
      [board[0][0],board[0][1],board[0][2]],
      [board[1][0],board[1][1],board[1][2]],
      [board[2][0],board[2][1],board[2][2]],

      [board[0][0],board[1][1],board[2][2]],
      [board[0][2],board[1][1],board[2][0]],

      [board[0][0],board[1][0],board[2][0]],
      [board[0][1],board[1][1],board[2][1]],
      [board[0][2],board[1][2],board[2][2]],
    
  ]
    
  for line in lines:
        if line[0]==line[1]==line[2] and line[0]!=EMPTY:
            return line[0]
  return None

# Check for draw
def is_draw(board):
    return all(cell != EMPTY for row in board for cell in row)

# Get all empty cells
def get_empty_cells(board):
    return [(i, j) for i in range(3) for j in range(3) if board[i][j] == EMPTY]

# Minimax algorithm
def minimax(board, is_max):
    winner = check_winner(board)
    if winner == AI: return 1
    if winner == HUMAN: return -1
    if is_draw(board): return 0

    best = -math.inf if is_max else math.inf
    for i, j in get_empty_cells(board):
        board[i][j] = AI if is_max else HUMAN
        score = minimax(board, not is_max)
        board[i][j] = EMPTY
        best = max(best, score) if is_max else min(best, score)
    return best


# AI move
def ai_move(board):
    best_score = -math.inf
    best_move = None
    for (i, j) in get_empty_cells(board):
        board[i][j] = AI
        score = minimax(board, False)
        board[i][j] = EMPTY
        if score > best_score:
            best_score = score
            best_move = (i, j)
    return best_move

# Human move
def human_move(board):
    while True:
        try:
            move = input("Enter your move (row and column 0-2, e.g. 1 2): ")
            i, j = map(int, move.strip().split())
            if board[i][j] == EMPTY:
                return i, j
            else:
                print("Cell already taken.")
        except (ValueError, IndexError):
            print("Invalid input. Try again.")

# Game loop
def play_game():
    board = create_board()
    current_player = HUMAN  # Human starts

    print("Welcome to Tic-Tac-Toe!")
    print_board(board)

    while True:
        if current_player == HUMAN:
            i, j = human_move(board)
        else:
            print("AI is making a move...")
            i, j = ai_move(board)

        board[i][j] = current_player
        print_board(board)

        winner = check_winner(board)
        if winner:
            print(f"{'You' if winner == HUMAN else 'AI'} wins!")
            break
        elif is_draw(board):
            print("It's a draw!")
            break

        current_player = AI if current_player == HUMAN else HUMAN

# Run the game
if __name__ == "__main__":
    play_game()
